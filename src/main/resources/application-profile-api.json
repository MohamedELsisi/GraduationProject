{
  "swagger": "2.0",
  "info": {
    "description": "Api Documentation",
    "version": "1.0",
    "title": "Api Documentation",
    "termsOfService": "urn:tos",
    "contact": {},
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0"
    }
  },
  "host": "localhost:8070",
  "basePath": "/",
  "tags": [
    {
      "name": "course-controller",
      "description": "Course Controller"
    },
    {
      "name": "answer-controller",
      "description": "Answer Controller"
    },
    {
      "name": "question-controller",
      "description": "Question Controller"
    },
    {
      "name": "level-controller",
      "description": "Level Controller"
    },
    {
      "name": "doctor-controller",
      "description": "Doctor Controller"
    },
    {
      "name": "student-controller",
      "description": "Student Controller"
    },
    {
      "name": "department-controller",
      "description": "Department Controller"
    },
    {
      "name": "exam-controller",
      "description": "Exam Controller"
    }
  ],
  "paths": {
    "/api/addAllCourses": {
      "post": {
        "tags": [
          "course-controller"
        ],
        "summary": "insert List of  courses",
        "operationId": "addAllCoursesUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "courses",
            "description": "courses",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Course"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseEntity"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/addAllDepartment": {
      "post": {
        "tags": [
          "department-controller"
        ],
        "summary": "insert List of Departments ",
        "operationId": "addAllDepartmentUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "departments",
            "description": "departments",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Department"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseEntity"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/addAllDoctor": {
      "post": {
        "tags": [
          "doctor-controller"
        ],
        "summary": "insert List of doctor ",
        "operationId": "addAllDoctorUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "doctors",
            "description": "doctors",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Doctor"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseEntity"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/addAllLevels": {
      "post": {
        "tags": [
          "level-controller"
        ],
        "summary": "insert list of Levels ",
        "operationId": "addAllLevelsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "levels",
            "description": "levels",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Level"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseEntity"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/addAllStudents": {
      "post": {
        "tags": [
          "student-controller"
        ],
        "summary": "insert List of students ",
        "operationId": "addAllStudentUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "students",
            "description": "students",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Student"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseEntity"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/addAnswer": {
      "post": {
        "tags": [
          "answer-controller"
        ],
        "summary": "insert answer",
        "operationId": "addAnswerUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "answer",
            "description": "answer",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Answer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseEntity"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/addCourse": {
      "post": {
        "tags": [
          "course-controller"
        ],
        "summary": "insert new course",
        "operationId": "addCourseUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "course",
            "description": "course",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Course"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseEntity"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/addDepartment": {
      "post": {
        "tags": [
          "department-controller"
        ],
        "summary": "insert new Department ",
        "operationId": "addDepartmentUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "department",
            "description": "department",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Department"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseEntity"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/addDoctor": {
      "post": {
        "tags": [
          "doctor-controller"
        ],
        "summary": "insert new doctor ",
        "operationId": "createDoctorUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "doctor",
            "description": "doctor",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Doctor"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseEntity"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/addExam": {
      "post": {
        "tags": [
          "exam-controller"
        ],
        "summary": "insert new exam",
        "operationId": "addExamUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "exam",
            "description": "exam",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Exam"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseEntity"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/addLevel": {
      "post": {
        "tags": [
          "level-controller"
        ],
        "summary": "insert new Level ",
        "operationId": "addLevelUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "level",
            "description": "level",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Level"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseEntity"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/addQuestion": {
      "post": {
        "tags": [
          "question-controller"
        ],
        "summary": "insert new Question ",
        "operationId": "addQuestionUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "question",
            "description": "question",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Question"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseEntity"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/addStudent": {
      "post": {
        "tags": [
          "student-controller"
        ],
        "summary": "insert new Student ",
        "operationId": "addCourseUsingPOST_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "student",
            "description": "student",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Student"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseEntity"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/deleteAnswer/{id}": {
      "delete": {
        "tags": [
          "answer-controller"
        ],
        "summary": "delete the answer with id ",
        "operationId": "deleteAnswerUsingDELETE",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id value for the answer u need to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseEntity"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/deleteCourse/{id}": {
      "delete": {
        "tags": [
          "course-controller"
        ],
        "summary": "delete course by id",
        "operationId": "deleteCourseUsingDELETE",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id value for the doctor u need to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseEntity"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/deleteDepartment/{id}": {
      "delete": {
        "tags": [
          "department-controller"
        ],
        "summary": "Delete the Department by id ",
        "operationId": "deleteDepartmentUsingDELETE",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id value for the Department u need to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseEntity"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/deleteDoctor/{id}": {
      "delete": {
        "tags": [
          "doctor-controller"
        ],
        "summary": "Delete doctor by id",
        "operationId": "deleteDoctorUsingDELETE",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id value for doctor u need to delete ",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseEntity"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/deleteLevel/{id}": {
      "delete": {
        "tags": [
          "level-controller"
        ],
        "summary": "Delete Level with id",
        "operationId": "deleteLevelUsingDELETE",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id value for the Level u need to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseEntity"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/deleteQuestion/{id}": {
      "delete": {
        "tags": [
          "question-controller"
        ],
        "summary": "Delete The Question by id ",
        "operationId": "deleteQuestionUsingDELETE",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id value for the Question u need to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseEntity"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/deleteStudent/{id}": {
      "delete": {
        "tags": [
          "student-controller"
        ],
        "summary": "delete student by id ",
        "operationId": "deleteStudentUsingDELETE",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id value for the student u need to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseEntity"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "204": {
            "description": "No Content"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/findCourseById/{id}": {
      "get": {
        "tags": [
          "course-controller"
        ],
        "summary": "search about course with id ",
        "operationId": "findCourseByIdUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id value for course u need to retrieve ",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseEntity"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/findCourseByName/{name}": {
      "get": {
        "tags": [
          "course-controller"
        ],
        "summary": "search about course with name ",
        "operationId": "findCourseByNameUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": " name  value for course u need to retrieve ",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseEntity"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/findDepartmentById/{id}": {
      "get": {
        "tags": [
          "department-controller"
        ],
        "summary": "search about Department by id  ",
        "operationId": "findDepartmentByIdUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id value for the Department u need to retrieve",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseEntity"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/findDepartmentByName/{name}": {
      "get": {
        "tags": [
          "department-controller"
        ],
        "summary": "search about Department by name  ",
        "operationId": "findDepartmentByNameUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Name value for the Department u need to retrieve",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseEntity"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/findDoctorById/{id}": {
      "get": {
        "tags": [
          "doctor-controller"
        ],
        "summary": "search about Doctor by id  ",
        "operationId": "findDoctorByIdUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id value for the doctor u need to retrieve",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseEntity"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/findDoctorByName/{name}": {
      "get": {
        "tags": [
          "doctor-controller"
        ],
        "summary": "Search about Doctor by Name ",
        "operationId": "findDoctorByNameUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "name value for the doctor u need to retrieve",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseEntity"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/findLevelById/{id}": {
      "get": {
        "tags": [
          "level-controller"
        ],
        "summary": "search about Level by id ",
        "operationId": "findLevelByIdUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id value for the Level u need to retrieve",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseEntity"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/findLevelByName/{name}": {
      "get": {
        "tags": [
          "level-controller"
        ],
        "summary": "search about Level by name",
        "operationId": "findLevelByNameUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "name value for the Level u need to retrieve",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseEntity"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/findStudentById/{id}": {
      "get": {
        "tags": [
          "student-controller"
        ],
        "summary": "search about student by id ",
        "operationId": "findStudentByIdUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id value for the Student u need to retrieve",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseEntity"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/findStudentByName/{name}": {
      "get": {
        "tags": [
          "student-controller"
        ],
        "summary": "Search about Student by name ",
        "operationId": "findStudentByNameUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Name value for the Level u need to retrieve",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseEntity"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/getAllCourses": {
      "get": {
        "tags": [
          "course-controller"
        ],
        "summary": "show all courses",
        "operationId": "getAllCoursesUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseEntity"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/getAllDepartments": {
      "get": {
        "tags": [
          "department-controller"
        ],
        "summary": "Show All  Department ",
        "operationId": "getAllDepartmentsUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseEntity"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/getAllDoctors": {
      "get": {
        "tags": [
          "doctor-controller"
        ],
        "summary": "Show all doctors  ",
        "operationId": "getAllDoctorsUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseEntity"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/getAllLevels": {
      "get": {
        "tags": [
          "level-controller"
        ],
        "summary": "show All Levels",
        "operationId": "getAllLevelsUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseEntity"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/getAllStudents": {
      "get": {
        "tags": [
          "student-controller"
        ],
        "summary": "Show All Student ",
        "operationId": "getAllStudentsUsingGET",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseEntity"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/updateAnswer": {
      "put": {
        "tags": [
          "answer-controller"
        ],
        "summary": "update  the answer",
        "operationId": "updateAnswerUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "answer",
            "description": "answer",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Answer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseEntity"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/updateCourse": {
      "put": {
        "tags": [
          "course-controller"
        ],
        "summary": "update course",
        "operationId": "updateCourseUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "course",
            "description": "course",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Course"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseEntity"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/updateDepartment": {
      "put": {
        "tags": [
          "department-controller"
        ],
        "summary": "Update  the Department ",
        "operationId": "updateDepartmentUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "department",
            "description": "department",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Department"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseEntity"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/updateDoctor": {
      "put": {
        "tags": [
          "doctor-controller"
        ],
        "summary": "Update Doctor data",
        "operationId": "updateDoctorUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "doctor",
            "description": "doctor",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Doctor"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseEntity"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/updateExam": {
      "put": {
        "tags": [
          "exam-controller"
        ],
        "summary": "Update  exam",
        "operationId": "updateExamUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "exam",
            "description": "exam",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Exam"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseEntity"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/updateLevel": {
      "put": {
        "tags": [
          "level-controller"
        ],
        "summary": "Update Level  ",
        "operationId": "updateLevelUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "Level",
            "description": "Level",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Level"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseEntity"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/updateQuestion": {
      "put": {
        "tags": [
          "question-controller"
        ],
        "summary": "Update The Question",
        "operationId": "updateQuestionUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "question",
            "description": "question",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Question"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseEntity"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/updateStudent": {
      "put": {
        "tags": [
          "student-controller"
        ],
        "summary": "Update student",
        "operationId": "updateStudentUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "student",
            "description": "student",
            "required": false,
            "schema": {
              "$ref": "#/definitions/Student"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseEntity"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    }
  },
  "definitions": {
    "Answer": {
      "type": "object",
      "properties": {
        "answer": {
          "type": "string",
          "description": "The content of answer"
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "The unique id of the answer"
        },
        "question": {
          "$ref": "#/definitions/Question"
        }
      },
      "description": "Details about the Answer"
    },
    "ResponseEntity": {
      "type": "object",
      "properties": {
        "body": {
          "type": "object"
        },
        "statusCode": {
          "type": "string",
          "enum": [
            "100 CONTINUE",
            "101 SWITCHING_PROTOCOLS",
            "102 PROCESSING",
            "103 CHECKPOINT",
            "200 OK",
            "201 CREATED",
            "202 ACCEPTED",
            "203 NON_AUTHORITATIVE_INFORMATION",
            "204 NO_CONTENT",
            "205 RESET_CONTENT",
            "206 PARTIAL_CONTENT",
            "207 MULTI_STATUS",
            "208 ALREADY_REPORTED",
            "226 IM_USED",
            "300 MULTIPLE_CHOICES",
            "301 MOVED_PERMANENTLY",
            "302 FOUND",
            "302 MOVED_TEMPORARILY",
            "303 SEE_OTHER",
            "304 NOT_MODIFIED",
            "305 USE_PROXY",
            "307 TEMPORARY_REDIRECT",
            "308 PERMANENT_REDIRECT",
            "400 BAD_REQUEST",
            "401 UNAUTHORIZED",
            "402 PAYMENT_REQUIRED",
            "403 FORBIDDEN",
            "404 NOT_FOUND",
            "405 METHOD_NOT_ALLOWED",
            "406 NOT_ACCEPTABLE",
            "407 PROXY_AUTHENTICATION_REQUIRED",
            "408 REQUEST_TIMEOUT",
            "409 CONFLICT",
            "410 GONE",
            "411 LENGTH_REQUIRED",
            "412 PRECONDITION_FAILED",
            "413 PAYLOAD_TOO_LARGE",
            "413 REQUEST_ENTITY_TOO_LARGE",
            "414 URI_TOO_LONG",
            "414 REQUEST_URI_TOO_LONG",
            "415 UNSUPPORTED_MEDIA_TYPE",
            "416 REQUESTED_RANGE_NOT_SATISFIABLE",
            "417 EXPECTATION_FAILED",
            "418 I_AM_A_TEAPOT",
            "419 INSUFFICIENT_SPACE_ON_RESOURCE",
            "420 METHOD_FAILURE",
            "421 DESTINATION_LOCKED",
            "422 UNPROCESSABLE_ENTITY",
            "423 LOCKED",
            "424 FAILED_DEPENDENCY",
            "425 TOO_EARLY",
            "426 UPGRADE_REQUIRED",
            "428 PRECONDITION_REQUIRED",
            "429 TOO_MANY_REQUESTS",
            "431 REQUEST_HEADER_FIELDS_TOO_LARGE",
            "451 UNAVAILABLE_FOR_LEGAL_REASONS",
            "500 INTERNAL_SERVER_ERROR",
            "501 NOT_IMPLEMENTED",
            "502 BAD_GATEWAY",
            "503 SERVICE_UNAVAILABLE",
            "504 GATEWAY_TIMEOUT",
            "505 HTTP_VERSION_NOT_SUPPORTED",
            "506 VARIANT_ALSO_NEGOTIATES",
            "507 INSUFFICIENT_STORAGE",
            "508 LOOP_DETECTED",
            "509 BANDWIDTH_LIMIT_EXCEEDED",
            "510 NOT_EXTENDED",
            "511 NETWORK_AUTHENTICATION_REQUIRED"
          ]
        },
        "statusCodeValue": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Department": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "The unique id of the Department"
        },
        "name": {
          "type": "string",
          "description": "The name of Department"
        }
      },
      "description": "Details about the Department"
    },
    "LevelAndDep": {
      "type": "object",
      "properties": {
        "department": {
          "$ref": "#/definitions/Department"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "level": {
          "$ref": "#/definitions/Level"
        }
      }
    },
    "Question": {
      "type": "object",
      "properties": {
        "exame": {
          "$ref": "#/definitions/Exam"
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "The unique id of the Question"
        },
        "question": {
          "type": "string",
          "description": "The content of Question"
        }
      },
      "description": "Details about the Question"
    },
    "Level": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "The unique id of the Level"
        },
        "name": {
          "type": "string",
          "description": "The name of Level"
        }
      },
      "description": "Details about the Level"
    },
    "StudentAndCourse": {
      "type": "object",
      "properties": {
        "courses": {
          "$ref": "#/definitions/Course"
        },
        "id": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Doctor": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "description": "The address of doctor"
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "The unique id of the Doctor"
        },
        "name": {
          "type": "string",
          "description": "The name of Doctor"
        },
        "phone": {
          "type": "string",
          "description": "The phone number of Doctor"
        }
      },
      "description": "Details about the Doctor"
    },
    "Course": {
      "type": "object",
      "properties": {
        "doctor": {
          "$ref": "#/definitions/Doctor"
        },
        "grade": {
          "type": "integer",
          "format": "int32",
          "description": "The grade of Course"
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "The unique id of the course"
        },
        "name": {
          "type": "string",
          "description": "The name of Course"
        },
        "passed_value": {
          "type": "integer",
          "format": "int32",
          "description": "The passed grade of Course"
        }
      },
      "description": "Details about the Course"
    },
    "Student": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "description": "The address of Student"
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "The unique id of the Student"
        },
        "levelAndDep": {
          "$ref": "#/definitions/LevelAndDep"
        },
        "name": {
          "type": "string",
          "description": "The Name of the Student"
        },
        "phone": {
          "type": "string",
          "description": "The phone number of Student"
        },
        "studentAndCourse": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StudentAndCourse"
          }
        }
      },
      "description": "Details about the Student"
    },
    "Exam": {
      "type": "object",
      "properties": {
        "course": {
          "$ref": "#/definitions/Course"
        },
        "course_name": {
          "type": "string",
          "description": "The name of Course "
        },
        "date": {
          "type": "string",
          "format": "date-time",
          "description": "The Date of Exam"
        },
        "doctor_name": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "The unique id of the Exam"
        },
        "question_num": {
          "type": "integer",
          "format": "int32",
          "description": "The number of Questions"
        },
        "start_time": {
          "type": "string",
          "format": "date-time",
          "description": "The Start time  of Exam"
        },
        "time": {
          "type": "integer",
          "format": "int32",
          "description": "The time  of Exam"
        }
      },
      "description": "Details about the Exam "
    }
  }
}